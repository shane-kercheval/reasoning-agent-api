# Production Environment Configuration
# Copy this file to .env for production deployment

# =============================================================================
# SHARED CONFIGURATION
# =============================================================================

# OpenAI API Configuration
OPENAI_API_KEY=your-openai-api-key-here

# Authentication - Production tokens (generate secure tokens)
# Generate secure tokens: python -c "import secrets; print(secrets.token_urlsafe(32))"
API_TOKENS=web-client-prod-token,admin-prod-token,mobile-prod-token
# The token for the web client that authenticates with the API 
REASONING_API_TOKEN=web-client-prod-token
REQUIRE_AUTH=true

# Production Settings
DEBUG=false

# =============================================================================
# REASONING API SERVICE
# =============================================================================

# Server Configuration
API_HOST=0.0.0.0
API_PORT=8000

# API URL for Reasoning Agent
REASONING_AGENT_BASE_URL=https://api.openai.com/v1

# HTTP Client Timeouts (seconds)
HTTP_CONNECT_TIMEOUT=5.0
HTTP_READ_TIMEOUT=60.0
HTTP_WRITE_TIMEOUT=10.0

# HTTP Connection Pooling
HTTP_MAX_CONNECTIONS=20
HTTP_MAX_KEEPALIVE_CONNECTIONS=5
HTTP_KEEPALIVE_EXPIRY=30.0

# =============================================================================
# WEB CLIENT SERVICE
# =============================================================================

# Service Configuration
WEB_CLIENT_PORT=8080
REASONING_API_URL=http://reasoning-api:8000  # Docker internal networking
# REASONING_API_URL=https://your-api.onrender.com  # External URL for separate deployments

# =============================================================================
# MCP SERVICE (Future)
# =============================================================================

# Service Configuration
MCP_SERVER_PORT=8001

# =============================================================================
# PHOENIX ARIZE CONFIGURATION
# =============================================================================

# PostgreSQL Database for Phoenix
POSTGRES_PASSWORD=secure-phoenix-password-change-me
POSTGRES_USER=phoenix_user
PHOENIX_POSTGRES_DB=phoenix

# Phoenix Service Configuration
PHOENIX_SECRET=secure-phoenix-secret-change-me-32chars-with-digit1
PHOENIX_PORT=6006
PHOENIX_GRPC_PORT=4317

# Phoenix Database Connection
# For Docker Compose: use service name 'postgres'
PHOENIX_SQL_DATABASE_URL=postgresql://phoenix_user:secure-phoenix-password-change-me@postgres:5432/phoenix
# For external database: use full hostname/IP
# PHOENIX_SQL_DATABASE_URL=postgresql://phoenix_user:password@your-db-host:5432/phoenix

# =============================================================================
# PRODUCTION DEPLOYMENT EXAMPLES
# =============================================================================

# Container Platform Example (Docker Compose):
# OPENAI_API_KEY=sk-proj-abc123...
# API_TOKENS=cN8mK2pQ7rShJ9vF,X4hB2nKdL5wT,M7yR3sZaE6cV
# REASONING_API_URL=http://reasoning-api:8000
# REASONING_API_TOKEN=cN8mK2pQ7rShJ9vF
# REQUIRE_AUTH=true

# Individual Service Deployment Example:
# OPENAI_API_KEY=sk-proj-abc123...
# API_TOKENS=cN8mK2pQ7rShJ9vF,X4hB2nKdL5wT,M7yR3sZaE6cV
# REASONING_API_URL=https://your-api.onrender.com
# REASONING_API_TOKEN=cN8mK2pQ7rShJ9vF
# REQUIRE_AUTH=true

# =============================================================================
# DEPLOYMENT WORKFLOW
# =============================================================================

# 1. Copy this file: cp .env.prod.example .env
# 2. Generate secure tokens (see command above)
# 3. Set real OpenAI API key
# 4. Configure REASONING_API_URL for your deployment
# 5. Deploy to your container platform
# 5. Access web interface: http://localhost:8080
# 6. Access API docs: http://localhost:8000/docs
# 7. Access Phoenix UI: http://localhost:6006
