# Demo MCP Server Configuration
# This configuration connects to the demo MCP server for demonstration purposes

servers:
  - name: demo_tools
    url: http://localhost:8000/mcp/
    enabled: true
    # This server provides realistic fake tools:
    # - get_weather: Weather information for any location
    # - search_web: Web search with realistic results
    # - get_stock_price: Stock market data
    # - analyze_text: Text sentiment analysis
    # - translate_text: Language translation
    # Start with: uv run python mcp_servers/fake_server.py

  # Example of a disabled HTTP server (for demo purposes)
  - name: external_api
    url: https://example-mcp-server.com
    enabled: false
    # Example of using an auth token from environment
    # auth_env_var: EXTERNAL_API_KEY

  # Example of a stdio server (subprocess-based)
  - name: local_stdio_server
    command: "uv"
    args: ["run", "python", "local_server.py"]
    env:
      API_KEY: "local_key"
      DEBUG: "true"
    enabled: false
    # Stdio servers run as subprocesses and communicate via stdin/stdout

# Additional examples (commented out for demo):
#  - name: web_search_real
#    url: https://mcp-web-search.example.com
#    auth_env_var: WEB_SEARCH_API_KEY
#    enabled: false
#    
#  - name: database_tools
#    url: http://localhost:8002
#    enabled: false
#
#  - name: python_tools
#    command: "python"
#    args: ["-m", "my_mcp_server"]
#    env:
#      PYTHONPATH: "/path/to/server"
#    enabled: false